name: Rust CI with Osquery

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install Osquery on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y osquery

      - name: Install Osquery on macOS
        if: runner.os == 'macOS'
        run: |
          brew install osquery

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      - name: Build
        run: cargo build --verbose

      - name: Launch Osquery
        run: osqueryd --S --config_path=/etc/osquery/osquery.conf --pidfile=/tmp/osquery.pid --database_path=/var/osquery --extensions_socket=/var/osquery/osquery.em --extensions_autoload=/etc/osquery/extensions.load &

      - name: Run tests
        run: cargo test --verbose
